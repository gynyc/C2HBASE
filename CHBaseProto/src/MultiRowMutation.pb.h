// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MultiRowMutation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MultiRowMutation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MultiRowMutation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Client.pb.h"
#include "HBase.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MultiRowMutation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MultiRowMutation_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MultiRowMutation_2eproto;
namespace hbase {
namespace pb {
class MultiRowMutationProcessorRequest;
class MultiRowMutationProcessorRequestDefaultTypeInternal;
extern MultiRowMutationProcessorRequestDefaultTypeInternal _MultiRowMutationProcessorRequest_default_instance_;
class MultiRowMutationProcessorResponse;
class MultiRowMutationProcessorResponseDefaultTypeInternal;
extern MultiRowMutationProcessorResponseDefaultTypeInternal _MultiRowMutationProcessorResponse_default_instance_;
class MutateRowsRequest;
class MutateRowsRequestDefaultTypeInternal;
extern MutateRowsRequestDefaultTypeInternal _MutateRowsRequest_default_instance_;
class MutateRowsResponse;
class MutateRowsResponseDefaultTypeInternal;
extern MutateRowsResponseDefaultTypeInternal _MutateRowsResponse_default_instance_;
}  // namespace pb
}  // namespace hbase
PROTOBUF_NAMESPACE_OPEN
template<> ::hbase::pb::MultiRowMutationProcessorRequest* Arena::CreateMaybeMessage<::hbase::pb::MultiRowMutationProcessorRequest>(Arena*);
template<> ::hbase::pb::MultiRowMutationProcessorResponse* Arena::CreateMaybeMessage<::hbase::pb::MultiRowMutationProcessorResponse>(Arena*);
template<> ::hbase::pb::MutateRowsRequest* Arena::CreateMaybeMessage<::hbase::pb::MutateRowsRequest>(Arena*);
template<> ::hbase::pb::MutateRowsResponse* Arena::CreateMaybeMessage<::hbase::pb::MutateRowsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace hbase {
namespace pb {

// ===================================================================

class MultiRowMutationProcessorRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hbase.pb.MultiRowMutationProcessorRequest) */ {
 public:
  MultiRowMutationProcessorRequest();
  virtual ~MultiRowMutationProcessorRequest();

  MultiRowMutationProcessorRequest(const MultiRowMutationProcessorRequest& from);
  MultiRowMutationProcessorRequest(MultiRowMutationProcessorRequest&& from) noexcept
    : MultiRowMutationProcessorRequest() {
    *this = ::std::move(from);
  }

  inline MultiRowMutationProcessorRequest& operator=(const MultiRowMutationProcessorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiRowMutationProcessorRequest& operator=(MultiRowMutationProcessorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiRowMutationProcessorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiRowMutationProcessorRequest* internal_default_instance() {
    return reinterpret_cast<const MultiRowMutationProcessorRequest*>(
               &_MultiRowMutationProcessorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MultiRowMutationProcessorRequest& a, MultiRowMutationProcessorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiRowMutationProcessorRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiRowMutationProcessorRequest* New() const final {
    return CreateMaybeMessage<MultiRowMutationProcessorRequest>(nullptr);
  }

  MultiRowMutationProcessorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiRowMutationProcessorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiRowMutationProcessorRequest& from);
  void MergeFrom(const MultiRowMutationProcessorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiRowMutationProcessorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hbase.pb.MultiRowMutationProcessorRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MultiRowMutation_2eproto);
    return ::descriptor_table_MultiRowMutation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MultiRowMutationProcessorRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MultiRowMutation_2eproto;
};
// -------------------------------------------------------------------

class MultiRowMutationProcessorResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hbase.pb.MultiRowMutationProcessorResponse) */ {
 public:
  MultiRowMutationProcessorResponse();
  virtual ~MultiRowMutationProcessorResponse();

  MultiRowMutationProcessorResponse(const MultiRowMutationProcessorResponse& from);
  MultiRowMutationProcessorResponse(MultiRowMutationProcessorResponse&& from) noexcept
    : MultiRowMutationProcessorResponse() {
    *this = ::std::move(from);
  }

  inline MultiRowMutationProcessorResponse& operator=(const MultiRowMutationProcessorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiRowMutationProcessorResponse& operator=(MultiRowMutationProcessorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiRowMutationProcessorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiRowMutationProcessorResponse* internal_default_instance() {
    return reinterpret_cast<const MultiRowMutationProcessorResponse*>(
               &_MultiRowMutationProcessorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MultiRowMutationProcessorResponse& a, MultiRowMutationProcessorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiRowMutationProcessorResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiRowMutationProcessorResponse* New() const final {
    return CreateMaybeMessage<MultiRowMutationProcessorResponse>(nullptr);
  }

  MultiRowMutationProcessorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiRowMutationProcessorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiRowMutationProcessorResponse& from);
  void MergeFrom(const MultiRowMutationProcessorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiRowMutationProcessorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hbase.pb.MultiRowMutationProcessorResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MultiRowMutation_2eproto);
    return ::descriptor_table_MultiRowMutation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MultiRowMutationProcessorResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MultiRowMutation_2eproto;
};
// -------------------------------------------------------------------

class MutateRowsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hbase.pb.MutateRowsRequest) */ {
 public:
  MutateRowsRequest();
  virtual ~MutateRowsRequest();

  MutateRowsRequest(const MutateRowsRequest& from);
  MutateRowsRequest(MutateRowsRequest&& from) noexcept
    : MutateRowsRequest() {
    *this = ::std::move(from);
  }

  inline MutateRowsRequest& operator=(const MutateRowsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MutateRowsRequest& operator=(MutateRowsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MutateRowsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MutateRowsRequest* internal_default_instance() {
    return reinterpret_cast<const MutateRowsRequest*>(
               &_MutateRowsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MutateRowsRequest& a, MutateRowsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MutateRowsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MutateRowsRequest* New() const final {
    return CreateMaybeMessage<MutateRowsRequest>(nullptr);
  }

  MutateRowsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MutateRowsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MutateRowsRequest& from);
  void MergeFrom(const MutateRowsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MutateRowsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hbase.pb.MutateRowsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MultiRowMutation_2eproto);
    return ::descriptor_table_MultiRowMutation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMutationRequestFieldNumber = 1,
    kRegionFieldNumber = 4,
    kNonceGroupFieldNumber = 2,
    kNonceFieldNumber = 3,
  };
  // repeated .hbase.pb.MutationProto mutation_request = 1;
  int mutation_request_size() const;
  void clear_mutation_request();
  ::hbase::pb::MutationProto* mutable_mutation_request(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hbase::pb::MutationProto >*
      mutable_mutation_request();
  const ::hbase::pb::MutationProto& mutation_request(int index) const;
  ::hbase::pb::MutationProto* add_mutation_request();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hbase::pb::MutationProto >&
      mutation_request() const;

  // optional .hbase.pb.RegionSpecifier region = 4;
  bool has_region() const;
  void clear_region();
  const ::hbase::pb::RegionSpecifier& region() const;
  ::hbase::pb::RegionSpecifier* release_region();
  ::hbase::pb::RegionSpecifier* mutable_region();
  void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // optional uint64 nonce_group = 2;
  bool has_nonce_group() const;
  void clear_nonce_group();
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_group() const;
  void set_nonce_group(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 nonce = 3;
  bool has_nonce() const;
  void clear_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce() const;
  void set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.MutateRowsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hbase::pb::MutationProto > mutation_request_;
  ::hbase::pb::RegionSpecifier* region_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_group_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_;
  friend struct ::TableStruct_MultiRowMutation_2eproto;
};
// -------------------------------------------------------------------

class MutateRowsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hbase.pb.MutateRowsResponse) */ {
 public:
  MutateRowsResponse();
  virtual ~MutateRowsResponse();

  MutateRowsResponse(const MutateRowsResponse& from);
  MutateRowsResponse(MutateRowsResponse&& from) noexcept
    : MutateRowsResponse() {
    *this = ::std::move(from);
  }

  inline MutateRowsResponse& operator=(const MutateRowsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MutateRowsResponse& operator=(MutateRowsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MutateRowsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MutateRowsResponse* internal_default_instance() {
    return reinterpret_cast<const MutateRowsResponse*>(
               &_MutateRowsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MutateRowsResponse& a, MutateRowsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MutateRowsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MutateRowsResponse* New() const final {
    return CreateMaybeMessage<MutateRowsResponse>(nullptr);
  }

  MutateRowsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MutateRowsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MutateRowsResponse& from);
  void MergeFrom(const MutateRowsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MutateRowsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hbase.pb.MutateRowsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MultiRowMutation_2eproto);
    return ::descriptor_table_MultiRowMutation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MutateRowsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MultiRowMutation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MultiRowMutationProcessorRequest

// -------------------------------------------------------------------

// MultiRowMutationProcessorResponse

// -------------------------------------------------------------------

// MutateRowsRequest

// repeated .hbase.pb.MutationProto mutation_request = 1;
inline int MutateRowsRequest::mutation_request_size() const {
  return mutation_request_.size();
}
inline ::hbase::pb::MutationProto* MutateRowsRequest::mutable_mutation_request(int index) {
  // @@protoc_insertion_point(field_mutable:hbase.pb.MutateRowsRequest.mutation_request)
  return mutation_request_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hbase::pb::MutationProto >*
MutateRowsRequest::mutable_mutation_request() {
  // @@protoc_insertion_point(field_mutable_list:hbase.pb.MutateRowsRequest.mutation_request)
  return &mutation_request_;
}
inline const ::hbase::pb::MutationProto& MutateRowsRequest::mutation_request(int index) const {
  // @@protoc_insertion_point(field_get:hbase.pb.MutateRowsRequest.mutation_request)
  return mutation_request_.Get(index);
}
inline ::hbase::pb::MutationProto* MutateRowsRequest::add_mutation_request() {
  // @@protoc_insertion_point(field_add:hbase.pb.MutateRowsRequest.mutation_request)
  return mutation_request_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hbase::pb::MutationProto >&
MutateRowsRequest::mutation_request() const {
  // @@protoc_insertion_point(field_list:hbase.pb.MutateRowsRequest.mutation_request)
  return mutation_request_;
}

// optional uint64 nonce_group = 2;
inline bool MutateRowsRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MutateRowsRequest::clear_nonce_group() {
  nonce_group_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MutateRowsRequest::nonce_group() const {
  // @@protoc_insertion_point(field_get:hbase.pb.MutateRowsRequest.nonce_group)
  return nonce_group_;
}
inline void MutateRowsRequest::set_nonce_group(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  nonce_group_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.MutateRowsRequest.nonce_group)
}

// optional uint64 nonce = 3;
inline bool MutateRowsRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MutateRowsRequest::clear_nonce() {
  nonce_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MutateRowsRequest::nonce() const {
  // @@protoc_insertion_point(field_get:hbase.pb.MutateRowsRequest.nonce)
  return nonce_;
}
inline void MutateRowsRequest::set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  nonce_ = value;
  // @@protoc_insertion_point(field_set:hbase.pb.MutateRowsRequest.nonce)
}

// optional .hbase.pb.RegionSpecifier region = 4;
inline bool MutateRowsRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::hbase::pb::RegionSpecifier& MutateRowsRequest::region() const {
  const ::hbase::pb::RegionSpecifier* p = region_;
  // @@protoc_insertion_point(field_get:hbase.pb.MutateRowsRequest.region)
  return p != nullptr ? *p : *reinterpret_cast<const ::hbase::pb::RegionSpecifier*>(
      &::hbase::pb::_RegionSpecifier_default_instance_);
}
inline ::hbase::pb::RegionSpecifier* MutateRowsRequest::release_region() {
  // @@protoc_insertion_point(field_release:hbase.pb.MutateRowsRequest.region)
  _has_bits_[0] &= ~0x00000001u;
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = nullptr;
  return temp;
}
inline ::hbase::pb::RegionSpecifier* MutateRowsRequest::mutable_region() {
  _has_bits_[0] |= 0x00000001u;
  if (region_ == nullptr) {
    auto* p = CreateMaybeMessage<::hbase::pb::RegionSpecifier>(GetArenaNoVirtual());
    region_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hbase.pb.MutateRowsRequest.region)
  return region_;
}
inline void MutateRowsRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(region_);
  }
  if (region) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      region = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, region, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  region_ = region;
  // @@protoc_insertion_point(field_set_allocated:hbase.pb.MutateRowsRequest.region)
}

// -------------------------------------------------------------------

// MutateRowsResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace hbase

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MultiRowMutation_2eproto
